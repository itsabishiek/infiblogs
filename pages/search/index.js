import React, { useState } from "react";
import Head from "next/head";
import { getPosts } from "../../services";
import PostCard from "../../components/postCard/PostCard";
import PostWidget from "../../components/postWidget/PostWidget";
import Categories from "../../components/categories/Categories";
import { useEffect } from "react";
import BlogPosts from "../../components/blogPosts/BlogPosts";

const Search = ({ title = "InfiBlogs | Search Blogs", posts }) => {
  const [query, setQuery] = useState("");
  const [postData, setPostData] = useState([]);

  useEffect(() => {
    setPostData(posts);

    const filterData = posts.filter((p) =>
      p.node.title.toLowerCase().includes(query)
    );

    setPostData(filterData);
  }, [query, posts]);

  console.log(postData);

  return (
    <div className="container">
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="home">
        <div className="search-container">
          <input
            className="search-input"
            type="text"
            placeholder="Search blogs here..."
            onChange={(e) => setQuery(e.target.value)}
          />
        </div>
        <div className="home-left">
          {postData.reverse().map((post, i) => (
            <div
              key={i}
              className="home-posts"
              style={{ padding: 0, margin: 0 }}
            >
              <BlogPosts post={post.node} />
            </div>
          ))}
          {postData.length === 0 && (
            <div>
              <h2 style={{ marginTop: 40, color: "var(--primary-color)" }}>
                No Blogs posts found, Try again
              </h2>
            </div>
          )}
        </div>

        <div className="home-right">
          <div>
            <Categories />
            <PostWidget />
          </div>
        </div>
      </div>
    </div>
  );
};

export default Search;

export async function getStaticProps() {
  const posts = (await getPosts()) || [];

  return {
    props: { posts },
  };
}
